openapi: 3.0.0
info:
  title: V1_DTC_Customers_API
  version: '2019-01-17'
  description: |
    RESTful API Access to the AMS DTC Customer business object. A winery direct-to-consumer (DTC) customer is a direct customer of the winery and is shipped to directly either by the winery or through a winery fulfillment service business.
    <br/>
    <h1>Version Control Scheme</h1>
    <p>Versions will be relatively static, when breaking/logic changes occur a new version will be created.</p>
    <h1>Revision Log</h1>
    <ul>
    <li>2019-01-17 TS   Drop decimal from version in urls</li>
    <li>2019-05-21 KAS  Finishing up the final revisions necessary to complete the DTC customers API</li>
    <li>2020-01-30 TS   Document "NO" option on DETAIL param for dtc_customers GET</li>
    <li>2020-01-31 TS   Document required prop preferred_payment_code for dtc_customers POST</li>
    <li>2020-04-06 KAS  Add revision_time and setup_time to the customer object.</li>
    <li>2020-05-05 KAS  Add revision_time and setup_time as query parameters on the custome object</li>
    <li>2020-06-08 KAS  Wrap zip code example values in quotes since the example value will display as a number in the example JSON even though the type is defined as string.</li>
    <li>2020-11-29 KAS. Factor out common components into the AMSComponents domain.</li>
    <li>2021-06-22 KAS. Add PATCH for wine pref codes on the active_club and inactive_club objects.</li>
    <li>2021-08-16 KAS. Clean up, re-organize a bit, and import into Stoplight Studio/ReadMe.</li>
    </ul>
  contact:
    name: Helpdesk API Support
    email: apisupport@amssoftware.com
  license:
    name: License Required
    url: 'http://www.amssoftware.com'
servers:
  - description: Development Server
    url: 'https://thor2012-test.amscloudconnect.amssoftware.com/api'
security:
  - AMSBearerAuth: []
tags:
  - name: DtcCustomersGET
    description: GETs to the API resource that represents a Direct-To-Consumer Customer of the winery.
  - name: DtcCustomersPOST
    description: POSTs to the API resource that represents a Direct-To-Consumer Customer of the winery.
  - name: DtcCustomersPATCH
    description: PATCHs to the API resource that represents a Direct-To-Consumer Customer of the winery.
  - name: DtcCustomersDELETE
    description: DELETEs to the API resource that represents a Direct-To-Consumer Customer of the winery.
paths:
  /winery/v1/dtc_customers:
    get:
      operationId: getDtcCustQueryResults
      tags:
        - DtcCustomersGET
      summary: Returns a list of DTC customers when provided with query parameters.
      description: 'Perform a search for DTC customers via various query metrics. By default the response is a JSON array of full customer objects, limited to 500. Using the DETAIL=ABBR query parameter will return abbreviated customer objects and increase the limit to 1000 customers returned. Using the DETAIL=NO query parameter will remove any limit to the number of customers returned and will further reduce the data to just essential identifying information. The endpoint will not return an error if the result of the query is an empty array of customers.'
      parameters:
        - $ref: '#/components/parameters/CustomerEmailQueryParm'
        - $ref: '#/components/parameters/CustomerFirstNameQueryParm'
        - $ref: '#/components/parameters/CustomerLastNameQueryParm'
        - $ref: '#/components/parameters/CustomerLastSaleDateQueryParm'
        - $ref: '#/components/parameters/CustomerLifetimeSalesQueryParm'
        - $ref: '#/components/parameters/CustomerNameQueryParm'
        - $ref: '#/components/parameters/CustomerSetupDateQueryParm'
        - $ref: '#/components/parameters/CustomerSetupTimeQueryParm'
        - $ref: '#/components/parameters/CustomerRevisionDateQueryParm'
        - $ref: '#/components/parameters/CustomerRevisionTimeQueryParm'
        - $ref: '#/components/parameters/CustomerStatusQueryParm'
        - $ref: '#/components/parameters/CustomerDetailQueryParm'
        - $ref: '#/components/parameters/GenericCustQueryParm'
        - $ref: '#/components/parameters/PaginationQueryParm'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustomerQuery'
        '400':
          $ref: '#/components/responses/400BadParmsGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
    post:
      operationId: addNewDtcCust
      tags:
        - DtcCustomersPOST
      parameters:
        - $ref: '#/components/parameters/AddressCheckOverrideQueryParm'
      summary: Allows the creation of a basic dtc_customers resource.
      description: Adds a dtc_customer resource to the database.
      requestBody:
        $ref: '#/components/requestBodies/V1CustomerPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1CustomerPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
  '/winery/v1/dtc_customers/{customer_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getDtcCust
      tags:
        - DtcCustomersGET
      summary: Gets dtc_customer resource
      description: 'The dtc_customer resource contains general customer information, as well as clubs, orders, contacts, and sales statistics for the customer resource in question.'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustomerGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateDtcCust
      tags:
        - DtcCustomersPATCH
      summary: Patch the dtc_customer resource
      description: 'A PATCH to the dtc_customer resource allows the editing of certain information on the dtc_customer resource. Some properties can be edited individually and others may have dependencies on other property values, requiring simultaneous editing.'
      requestBody:
        $ref: '#/components/requestBodies/V1CustomerPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustomerPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      operationId: deleteDtcCust
      tags:
        - DtcCustomersDELETE
      summary: Delete the dtc_customer resource
      description: A DELETE to the dtc_customer resource removes the specified customer from the AMS database. This action is contingent on customer history being present.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustomerDelete'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/active_clubs':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getActiveClubCollection
      tags:
        - DtcCustomersGET
      summary: Get active_clubs array
      description: Returns an array of 'Active' wine_club resources that belong to the specific dtc_customer resource specified by customer_id. If the dtc_customer resource has no active wine club memberships an empty array will be returned.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ActiveClubsGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addActiveClub
      tags:
        - DtcCustomersPOST
      summary: Post active_club for dtc_customer
      description: Creates a new active_club for the specified dtc_customer resource and adds it to the collection of active clubs.
      requestBody:
        $ref: '#/components/requestBodies/V1ClubPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1ActiveClubPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/active_clubs/{club_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getActiveClub
      tags:
        - DtcCustomersGET
      summary: Get active wine_club resource
      description: Returns info for an active wine_club resource. The resource represents an active wine club membership belonging to the specified dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateActiveClub
      tags:
        - DtcCustomersPATCH
      summary: Patch an active_club for dtc_customer
      description: Edits select properties of an active_club belonging an dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1ClubPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ActiveClubPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/active_clubs/{club_id}/club_modifiers':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getActiveClubModifierCollection
      tags:
        - DtcCustomersGET
      summary: Get club_modifiers array
      description: Returns an array of club modifiers for a particular active wine_club resource. If the wine_club resource has no club modifiers an empty array will be returned.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubModifiersGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addActiveClubModifier
      tags:
        - DtcCustomersPOST
      summary: Post club_modifiers for active_club
      description: Creates a new club_modifier and adds it to the collection associated with the active_club
      requestBody:
        $ref: '#/components/requestBodies/V1ClubModifierPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1ClubModifierPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/active_clubs/{club_id}/club_modifiers/{club_modifier_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
      - $ref: '#/components/parameters/ClubModifierIdPathParm'
    get:
      operationId: getActiveClubModifier
      tags:
        - DtcCustomersGET
      summary: Get specific club_modifier
      description: Returns a specific club_modifier for a particular active wine_club resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubModifierGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateActiveClubModifier
      tags:
        - DtcCustomersPATCH
      summary: Patch specific club_modifier
      description: Allows for the modification of select properties of a specific club modifier attached to a particular wine_club resource.
      requestBody:
        $ref: '#/components/requestBodies/V1ClubModifierPatchRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1ClubModifierPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/active_clubs/{club_id}/override_information':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getActiveClubOverrideInfo
      tags:
        - DtcCustomersGET
      summary: Get override_information resource
      description: Returns override_information for a particular active active wine_club resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1OverrideInformationGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateActiveClubOverrideInfo
      tags:
        - DtcCustomersPATCH
      summary: Patch override_information for active_club
      description: Edits the override_information for an active_club
      requestBody:
        $ref: '#/components/requestBodies/V1OverrideInformationPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1OverrideInformationPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/active_clubs/{club_id}/wine_preference_codes':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getActiveClubWinePrefCodeCollection
      tags:
        - DtcCustomersGET
      summary: Get wine_preference_codes array
      description: Returns array of wine_preference_codes attached to the requested active_club.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1WinePrefCodesGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addActiveClubWinePrefCode
      tags:
        - DtcCustomersPOST
      summary: Post wine_preference_code for active_club
      description: Adds a new wine_preference_code to the collection attached to the active_club.
      requestBody:
        $ref: '#/components/requestBodies/V1WinePrefCodePostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1WinePrefCodePost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/active_clubs/{club_id}/wine_preference_codes/{wine_pref_code_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
      - $ref: '#/components/parameters/WinePrefCodeIdPathParm'
    get:
      operationId: getActiveClubWinePrefCode
      tags:
        - DtcCustomersGET
      summary: Get specific wine_preference_code
      description: Returns a single wine_preference_code attached to the requested active_club as indicated by the wine_pref_code_id.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1WinePrefCodeGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      operationId: deleteActiveClubWinePrefCode
      tags:
        - DtcCustomersDELETE
      summary: Delete specific wine_preference_code
      description: Deletes a specifc wine_preference_code belonging to an active_club
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1WinePrefCodeDelete'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/credit_cards':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getCreditCardCollection
      tags:
        - DtcCustomersGET
      summary: Get credit_cards array
      description: 'Returns array of credit_card resources belonging to a dtc_customer resource. If the dtc_customer has no alternative credit cards, an empty array will be returned.'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CreditCardsGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addCreditCard
      tags:
        - DtcCustomersPOST
      summary: Post credit_card for customer
      description: Creates a new credit_card for the specified dtc_customer resource and adds it to the collection of alternative credit cards.
      requestBody:
        $ref: '#/components/requestBodies/V1CreditCardPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1CreditCardPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/credit_cards/{credit_card_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/CreditCardIdPathParm'
    get:
      operationId: getCreditCard
      tags:
        - DtcCustomersGET
      summary: Get credit_card resource
      description: Returns single credit_card resource belonging to a dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CreditCardGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateCreditCard
      tags:
        - DtcCustomersPATCH
      summary: Patch specific credit_card
      description: Edits select information on a specific credit_card belonging to a dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1CreditCardPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CreditCardPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      operationId: delete
      tags:
        - DtcCustomersDELETE
      summary: Delete specific credit_card
      description: Deletes a specifc credit_card belonging to a dtc_customer
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CreditCardDelete'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/alt_shipping_addresses':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getAltShipAddressCollection
      tags:
        - DtcCustomersGET
      summary: Get alt_shipping_addresses array
      description: 'Returns array of alt_shipping_address resources belonging to a dtc_customer resource. If the dtc_customer has no alternative shipping addresses, an empty array will be returned.'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1AltShippingAddressesGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addAltShipAddress
      tags:
        - DtcCustomersPOST
      parameters:
        - $ref: '#/components/parameters/AddressCheckOverrideQueryParm'
      summary: Post alternative shipping address for customer
      description: Creates a new alt_shipping_address for the specified dtc_customer resource and adds it to the collection of alternative shipping addresses.
      requestBody:
        $ref: '#/components/requestBodies/V1AltShipAddressPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1AltShipAddressPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/alt_shipping_addresses/{alt_ship_address_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/AltShipAddressIdPathParm'
    get:
      operationId: getAltShipAddress
      tags:
        - DtcCustomersGET
      summary: Get alt_shipping address resource
      description: Returns single alt_shipping_address belonging to a dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1AltShippingAddressGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateAltShipAddress
      tags:
        - DtcCustomersPATCH
      parameters:
        - $ref: '#/components/parameters/AddressCheckOverrideQueryParm'
      summary: Patch specific alt_shipping_address
      description: Edits select information on a specific alt_shipping_address belonging to a dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1AltShipAddressPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1AltShipAddressPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      operationId: deleteAltShipAddress
      tags:
        - DtcCustomersDELETE
      summary: Delete specific alt_shipping_address
      description: Deletes a specifc alt_shipping_address belonging to a dtc_customer
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1AltShipAddressDelete'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/billing_address':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getBillingAddress
      tags:
        - DtcCustomersGET
      summary: Get billing_address resource
      description: Returns billing_address resource belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1BillingAddressGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addBillingAddress
      tags:
        - DtcCustomersPOST
      parameters:
        - $ref: '#/components/parameters/AddressCheckOverrideQueryParm'
      summary: Post billing_address
      description: Adds billing_address to a dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1BillingAddressPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1BillingAddressPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateBillingAddress
      tags:
        - DtcCustomersPATCH
      parameters:
        - $ref: '#/components/parameters/AddressCheckOverrideQueryParm'
      summary: Patch billing_address
      description: Edits select information on the billing_address belonging to a dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1BillingAddressPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1BillingAddressPatch'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/contacts':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getContactCollection
      tags:
        - DtcCustomersGET
      summary: Get contacts array
      description: 'Returns array of contact resources belonging to the dtc_customer resource. If the dtc_customer resource has no contact resources, an empty array will be returned.'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustContactsGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addContact
      tags:
        - DtcCustomersPOST
      summary: Post contact for customer
      description: Creates a new contact for the specified dtc_customer resource and adds it to the collection of contacts.
      requestBody:
        $ref: '#/components/requestBodies/V1CustContactPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1CustContactPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/contacts/{contact_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ContactIdPathParm'
    get:
      operationId: getContact
      tags:
        - DtcCustomersGET
      summary: Get contact resource
      description: Returns single contact resource belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustContactGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateContact
      tags:
        - DtcCustomersPATCH
      summary: Patch specific contact
      description: Edits select information on specific contact associated with a dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1CustContactPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustContactPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/contacts/{contact_id}/additional_comments':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ContactIdPathParm'
    get:
      operationId: getContactAdditionalCommentCollection
      tags:
        - DtcCustomersGET
      summary: Get additional_comments for contact resource
      description: Returns single contact resource belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1AdditionalCommentsGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addContactAdditionalComments
      tags:
        - DtcCustomersPOST
      summary: Post contact for customer
      description: Creates a new contact for the specified dtc_customer resource and adds it to the collection of contacts.
      requestBody:
        $ref: '#/components/requestBodies/V1AdditionalCommentsPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1AdditionalCommentPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/contacts/{contact_id}/additional_comments/{additional_comment_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ContactIdPathParm'
      - $ref: '#/components/parameters/AdditionalCommentIdPathParm'
    get:
      operationId: getContactAdditionalComment
      tags:
        - DtcCustomersGET
      summary: Get additional_comments for contact resource
      description: Returns single contact resource belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1AdditionalCommentGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      operationId: deleteContactAdditionalComment
      tags:
        - DtcCustomersDELETE
      summary: Delete additional_comment
      description: Delete additional_comment from the collection attaced to the contact.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1AdditionalCommentDelete'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/inactive_clubs':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getInactiveClubCollection
      tags:
        - DtcCustomersGET
      summary: Get inactive_clubs array
      description: Returns an array of 'Inactive' wine_club resources that belong to the specific dtc_customer resource specified by customer_id. If the dtc_customer resource has no inactive wine club memberships an empty array will be returned.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1InactiveClubsGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/inactive_clubs/{club_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getInactiveClub
      tags:
        - DtcCustomersGET
      summary: Get inactive wine_club resource
      description: Returns info for an inactive wine_club resource. The resource represents an inactive wine club membership belonging to the specified dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateInactiveClub
      tags:
        - DtcCustomersPATCH
      summary: Patch an inactive_club for dtc_customer
      description: Edits select properties of an inactive_club belonging an dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1ClubPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1InactiveClubPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/inactive_clubs/{club_id}/club_modifiers':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getInactiveClubModifierCollection
      tags:
        - DtcCustomersGET
      summary: Get club_modifiers array
      description: Returns an array of club modifiers for a particular inactive wine_club resource. If the wine_club resource has no club modifiers an empty array will be returned.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubModifiersGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addInactiveClubModifier
      tags:
        - DtcCustomersPOST
      summary: Post club_modifiers for inactive_club
      description: Creates a new club_modifier and adds it to the collection associated with the inactive_club
      requestBody:
        $ref: '#/components/requestBodies/V1ClubModifierPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1ClubModifierPost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/inactive_clubs/{club_id}/club_modifiers/{club_modifier_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
      - $ref: '#/components/parameters/ClubModifierIdPathParm'
    get:
      operationId: getInactiveClubModifier
      tags:
        - DtcCustomersGET
      summary: Get specific club_modifier
      description: Returns a specific club_modifier for a particular inactive wine_club resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubModifierGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateInactiveClubModifier
      tags:
        - DtcCustomersPATCH
      summary: Patch specific club_modifier
      description: Allows for the modification of select properties of a specific club modifier attached to a particular wine_club resource.
      requestBody:
        $ref: '#/components/requestBodies/V1ClubModifierPatchRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1ClubModifierPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/inactive_clubs/{club_id}/override_information':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getInactiveClubOverrideInfo
      tags:
        - DtcCustomersGET
      summary: Get override_information resource
      description: Returns override_information for a particular active inactive wine_club resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1OverrideInformationGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateInactiveClubOverrideInfo
      tags:
        - DtcCustomersPATCH
      summary: Patch override_information for inactive_club
      description: Edits the override_information for an inactive_club
      requestBody:
        $ref: '#/components/requestBodies/V1OverrideInformationPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1OverrideInformationPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/inactive_clubs/{club_id}/wine_preference_codes':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getInactiveClubWinePrefCodeCollection
      tags:
        - DtcCustomersGET
      summary: Get wine_preference_codes array
      description: Returns array of wine_preference_codes attached to the requested inactive_club.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1WinePrefCodesGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addInactiveClubWinePrefCode
      tags:
        - DtcCustomersPOST
      summary: Post wine_preference_code for inactive_club
      description: Adds a new wine_preference_code to the collection attached to the inactive_club.
      requestBody:
        $ref: '#/components/requestBodies/V1WinePrefCodePostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1WinePrefCodePost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/inactive_clubs/{club_id}/wine_preference_codes/{wine_pref_code_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
      - $ref: '#/components/parameters/WinePrefCodeIdPathParm'
    get:
      operationId: getInactiveClubWinePrefCode
      tags:
        - DtcCustomersGET
      summary: Get specific wine_preference_code
      description: Returns a single wine_preference_code attached to the requested inactive_club as indicated by the wine_pref_code_id.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1WinePrefCodeGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      operationId: deleteInactiveClubWinePrefCode
      tags:
        - DtcCustomersDELETE
      summary: Delete specific wine_preference_code
      description: Deletes a specifc wine_preference_code belonging to an inactive_club
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1WinePrefCodeDelete'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/mail_list_codes':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getMailListCodeCollection
      tags:
        - DtcCustomersGET
      summary: Get mail_list_codes array
      description: 'Returns an array of mail_list_code belonging to the dtc_customer resource. If the dtc_customer resource has no mail_list_code resources, an empty array will be returned. NOTE A maximum of 16 mail list codes can exist for any dtc_customer resource, codes are indexed by their position in the array, 1-16.'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1MailListCodesGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addMailListCodeCollection
      tags:
        - DtcCustomersPOST
      summary: Post mail_list_code for dtc_customer
      description: Creates a new mail_list_code and adds it to the collection associated with the dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1MailListCodePostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1MailListCodePost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/mail_list_codes/{mail_list_code_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/MailListCodeIdPathParm'
    get:
      operationId: getMailListCode
      tags:
        - DtcCustomersGET
      summary: Get mail_list_code resource
      description: Returns a single mail_list_code resource belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1MailListCodeGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      operationId: deleteMailListCode
      tags:
        - DtcCustomersDELETE
      summary: Delete specific mail_list_code
      description: Deletes a specifc mail_list_code belonging to a dtc_customer
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1MailListCodeDelete'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/notes':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getNoteCollection
      tags:
        - DtcCustomersGET
      summary: Get notes array
      description: 'Returns array of note resources belonging to the dtc_customer resource. If the dtc_customer resource has no note resources, an empty array will be returned.'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustNotesGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      operationId: addNote
      tags:
        - DtcCustomersPOST
      summary: Post note for dtc_customer
      description: Creates a new note and adds it to the collection belonging to the dtc_customer resource
      requestBody:
        $ref: '#/components/requestBodies/V1CustNotePostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201SuccessfulV1CustNotePost'
        '400':
          $ref: '#/components/responses/400BadPostResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/notes/{note_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/NoteIdPathParm'
    get:
      operationId: getNote
      tags:
        - DtcCustomersGET
      summary: Get note resource
      description: Returns single note resource belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustNoteGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      operationId: deleteNote
      tags:
        - DtcCustomersDELETE
      summary: Delete note resource
      description: Deletes single note resource indicated by note_id belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustNoteDelete'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/orders':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getOrderCollection
      tags:
        - DtcCustomersGET
      summary: Get orders array
      description: 'Returns array of order resources belonging to the dtc_customer resource. If the dtc_customer has no order resources, an empty array will be returned.'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustOrdersGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/orders/{order_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/OrderIdPathParm'
    get:
      operationId: getOrder
      tags:
        - DtcCustomersGET
      summary: |
        Get order resource
      description: |
        Returns a single order resource belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1CustOrderGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/primary_shipping_address':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getPrimaryShippingAddress
      tags:
        - DtcCustomersGET
      summary: Get primary_shipping_address resource
      description: Returns the primary_shipping_address belonging to the dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1PrimaryShippingAddressGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updatePrimaryShippingAddress
      tags:
        - DtcCustomersPATCH
      parameters:
        - $ref: '#/components/parameters/AddressCheckOverrideQueryParm'
      summary: Patch primary_shipping_address
      description: Edits select information on the primary_shipping_address belonging to a dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1PrimaryShippingAddressPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1PrimaryShippingAddressPatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/quit_clubs':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getQuitClubCollection
      tags:
        - DtcCustomersGET
      summary: Get quit_clubs array
      description: Returns an array of 'Quit' wine_club resources that belong to the specific dtc_customer resource specified by customer_id. If the dtc_customer resource has no quit wine club memberships an empty array will be returned.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1QuitClubsGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/quit_clubs/{club_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getQuitClub
      tags:
        - DtcCustomersGET
      summary: Get quit wine_club resource
      description: Returns info for a quit wine_club resource. The resource represents an quit wine club membership belonging to the specified dtc_customer resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/quit_clubs/{club_id}/club_modifiers':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getQuitClubModifierCollection
      tags:
        - DtcCustomersGET
      summary: Get club_modifiers array
      description: Returns an array of club modifiers for a particular quit wine_club resource. If the wine_club resource has no club modifiers an empty array will be returned.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubModifiersGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/quit_clubs/{club_id}/club_modifiers/{club_modifier_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
      - $ref: '#/components/parameters/ClubModifierIdPathParm'
    get:
      operationId: getQuitClubModifier
      tags:
        - DtcCustomersGET
      summary: Get specific club_modifier
      description: Returns a specific club_modifier for a particular quit wine_club resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1ClubModifierGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/quit_clubs/{club_id}/override_information':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getQuitClubOverrideInfo
      tags:
        - DtcCustomersGET
      summary: Get override_information resource
      description: Returns override_information for a particular active quit wine_club resource.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1OverrideInformationGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/quit_clubs/{club_id}/wine_preference_codes':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
    get:
      operationId: getQuitClubWinePrefCodeCollection
      tags:
        - DtcCustomersGET
      summary: Get wine_preference_codes array
      description: Returns array of wine_preference_codes attached to the requested quit_club.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1WinePrefCodesGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/quit_clubs/{club_id}/wine_preference_codes/{wine_pref_code_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/ClubIdPathParm'
      - $ref: '#/components/parameters/WinePrefCodeIdPathParm'
    get:
      operationId: getQuitClubWinePrefCode
      tags:
        - DtcCustomersGET
      summary: Get specific wine_preference_code
      description: Returns a single wine_preference_code attached to the requested quit_club as indicated by the wine_pref_code_id.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1WinePrefCodeGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/sales_statistics':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getSalesStatistics
      tags:
        - DtcCustomersGET
      summary: Get sales_statistics resource
      description: Returns sales_statistics resource belonging to the dtc_customer resource. Statistics are calculated once a night as well as each time a winery employee views the dtc_customer data via the AMS Client Software.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1SalesStatisticsGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/user_defined_codes':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
    get:
      operationId: getUserDefinedCodeCollection
      tags:
        - DtcCustomersGET
      summary: Get user_defined_codes array
      description: 'Returns an array of user_defined_code resources belonging to the dtc_customer resource. User-defined codes (UDC) for a dtc_customer are free form grouping codes the winery may use how they wish. They are similar to tag or label concepts. There can be up to four UDC codes on a customer record and the order of the codes is likely significant to the winery. IDs are assigned 1-4 by position. The array will always contain 4 entries, with null signifying a missing entry.'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1UserDefinedCodesGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/winery/v1/dtc_customers/{customer_id}/user_defined_codes/{user_defined_code_id}':
    parameters:
      - $ref: '#/components/parameters/CustomerIdPathParm'
      - $ref: '#/components/parameters/UserDefinedCodeIdPathParm'
    get:
      operationId: getUserDefinedCode
      tags:
        - DtcCustomersGET
      summary: Get user_defined_code resource
      description: Returns a single entry from the user_defined_codes array belonging to the dtc_customer resource. The entry will either be a user_defined_code resource or null.
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1UserDefinedCodeGet'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
    patch:
      operationId: updateUserDefinedCode
      tags:
        - DtcCustomersPATCH
      summary: Patch specific user_defined_code
      description: Edits select information on a specific user_defined_code belonging to a dtc_customer
      requestBody:
        $ref: '#/components/requestBodies/V1UserDefinedCodePatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200SuccessfulV1UserDefinedCodePatch'
        '400':
          $ref: '#/components/responses/400BadPatchResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/403ForbiddenResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
components:
  securitySchemes:
    AMSBearerAuth:
      type: http
      scheme: bearer
  parameters:
    CustomerEmailQueryParm:
      name: email
      in: query
      description: Parameter value will be used to find customer accounts with an email containing the search string provided. The search methodology is of the contains type.
      required: false
      schema:
        type: string
    CustomerFirstNameQueryParm:
      name: firstname
      in: query
      description: Parameter value will be used to find customer accounts with a first name containing the search string provided. The search methodology is of the contains type.
      required: false
      schema:
        type: string
    CustomerLastNameQueryParm:
      name: lastname
      in: query
      description: Parameter value will be used to find customer accounts with a last name containing the search string provided. The search methodology is of the contains type.
      required: false
      schema:
        type: string
    CustomerLastSaleDateQueryParm:
      name: lastsaledate
      in: query
      description: 'Date that a Point-of-Sale customer last made a purchase. Expected date format is MMDDYY. Can be <MMDDYY, >MMDDYY, or a date range MMDDYY-MMDDYY.'
      required: false
      schema:
        type: string
    CustomerLifetimeSalesQueryParm:
      name: lifetimesales
      in: query
      description: 'Total lifetime sales for a Point-of-Sale customer. The parameter value must be a chevron (< or >) followed by a numeric value or two numeric values separated by a hyphen. For instance the value >250 indicates lifetime sales values greater than 250, <250 represents lifetime sales values less than 250. A closed range of values can be indicated by two numeric values separated by a hyphen. For instance, 250-500 indicates lifetime sales values between 250 and 500.'
      required: false
      schema:
        type: string
    CustomerNameQueryParm:
      name: name
      in: query
      description: 'Parameter value will be used to find customer accounts with name fields containing the search string provided. This search is across the first name, last name, and full name fields. The search methodology is of the contains type.'
      required: false
      schema:
        type: string
    CustomerSetupDateQueryParm:
      name: setupdate
      in: query
      description: 'Date on which the Point-of-Sale customer''s account was setup. Expected date format is MMDDYY. Can be <MMDDYY, >MMDDYY, or a date range MMDDYY-MMDDYY.'
      required: false
      schema:
        type: string
    CustomerSetupTimeQueryParm:
      name: setup_time
      in: query
      description: 'Time which the Point-of-Sale customer''s account was setup. Expected format is 24hr HH:MM:SS. Can be <HH:MM:SS, >HH:MM:SS, or a range HH:MM:SS-HH:MM:SS.'
      required: false
      schema:
        type: string
    CustomerRevisionDateQueryParm:
      name: revisiondate
      in: query
      description: 'Date on which the Point-of-Sale customer''s account was last revised. Expected date format is MMDDYY. Can be <MMDDYY, >MMDDYY, or a date range MMDDYY-MMDDYY.'
      required: false
      schema:
        type: string
    CustomerRevisionTimeQueryParm:
      name: revision_time
      in: query
      description: 'Time the Point-of-Sale customer''s account was last revised. Expected format is 24hr HH:MM:SS. Can be <HH:MM:SS, >HH:MM:SS, or a range HH:MM:SS-HH:MM:SS.'
      required: false
      schema:
        type: string
    CustomerStatusQueryParm:
      name: status
      in: query
      description: Active status for the Point-of-Sale customer. Accepted parameter values are ACTIVE and INACTIVE.
      required: false
      schema:
        $ref: '#/components/schemas/CustomerStatusEnum'
    CustomerDetailQueryParm:
      name: detail
      in: query
      description: 'Flag indicating whether to include customer detail in results array; abbreviated vs. no detail. By default when this parameter isn''t used, the FULL dtc_customer objects are returned. Valid values are ABBR or NO.'
      required: false
      schema:
        type: string
    PaginationQueryParm:
      name: pagination
      in: query
      description: 'Query parameter that will allow for retrieving "pages" of results from the dtc_customers resource. The format of the value passed must be the following, {number1},{number2}. The first numeric value indicates the number of results per page and the second numeric value indicates the requested page of results.'
      required: false
      schema:
        type: string
    GenericCustQueryParm:
      name: generic_custs
      in: query
      description: Query parameter that will allow for retrieving "generic" customers if necessary. Accepted parameter values are INCLUDE and ONLY.
      required: false
      schema:
        $ref: '#/components/schemas/GenericCustFlagEnum'
    AddressCheckOverrideQueryParm:
      name: address_check_override
      in: query
      description: Parameter will indicate whether to override the AMS address cleanser/checker during data validation.
      required: false
      schema:
        type: boolean
    CustomerIdPathParm:
      name: customer_id
      in: path
      description: customer_id is a unique identifier for a DTC customer (AKA customer number).
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 999999
    CreditCardIdPathParm:
      name: credit_card_id
      in: path
      description: credit_card_id is a unique identifier for an alternative credit card.
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 999999999999
    AltShipAddressIdPathParm:
      name: alt_ship_address_id
      in: path
      description: alt_ship_address_id is a unique identifier for an alternative shipping address.
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 999999999999
    ClubIdPathParm:
      name: club_id
      in: path
      description: club_id is a unique identifier for a wine club.
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 999999999999
    ContactIdPathParm:
      name: contact_id
      in: path
      description: contact_id is a unique identifier for a customer contact.
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 999999999
    MailListCodeIdPathParm:
      name: mail_list_code_id
      in: path
      description: mail_list_code_id is a sequential identifier for one of the mail list codes.
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 16
    NoteIdPathParm:
      name: note_id
      in: path
      description: note_id is a sequential identifier for a customer note.
      required: true
      schema:
        type: integer
        minimum: 1
    OrderIdPathParm:
      name: order_id
      in: path
      description: order_id is a unique identifier for an order.
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 999999999
    UserDefinedCodeIdPathParm:
      name: user_defined_code_id
      in: path
      description: user_defined_code_id is a sequential identifier for a user-defined code.
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 4
    ClubModifierIdPathParm:
      name: club_modifier_id
      in: path
      description: club_modifier_id is a sequential identifier for a club_modifier.
      required: true
      schema:
        type: integer
        minimum: 1
    WinePrefCodeIdPathParm:
      name: wine_pref_code_id
      in: path
      description: wine_pref_code_id is a sequential identifier for a wine_preference_code.
      required: true
      schema:
        type: integer
        minimum: 1
    AdditionalCommentIdPathParm:
      name: additional_comment_id
      in: path
      description: additional_comment_id is a sequential identifier for an additional_comment.
      required: true
      schema:
        type: integer
        minimum: 1
  requestBodies:
    V1CustomerPostRequestBody:
      description: Request body for posting a dtc_customer resource to the database. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostCustomerObject'
    V1CustomerPatchRequestBody:
      description: Request body for patching a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchCustomerObject'
    V1CreditCardPostRequestBody:
      description: Request body for posting an credit_card to a dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostCreditCardObject'
    V1CreditCardPatchRequestBody:
      description: Request body for patching an credit_card associated with a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchCreditCardObject'
    V1AltShipAddressPostRequestBody:
      description: Request body for posting a alt_shipping_address to a dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostAltShipAddressObject'
    V1AltShipAddressPatchRequestBody:
      description: Request body for patching an alt_shipping_address associated with a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchAltShipAddressObject'
    V1BillingAddressPatchRequestBody:
      description: Request body for patching the billing_address associated with a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchBillingAddressObject'
    V1BillingAddressPostRequestBody:
      description: Request body for posting the billing_address associated with a dtc_customer resource in the database. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostBillingAddressObject'
    V1CustContactPostRequestBody:
      description: Request body for posting a contact to the dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostCustContactObject'
    V1AdditionalCommentsPostRequestBody:
      description: Request body for posting an additional_comment to a contact associated with the dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostAdditionalCommentObject'
    V1CustContactPatchRequestBody:
      description: Request body for patching a contact associated with a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchCustContactObject'
    V1PrimaryShippingAddressPatchRequestBody:
      description: Request body for patching the primary_shipping_address associated with a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchPrimaryShipAddressObject'
    V1ClubPostRequestBody:
      description: Request body for posting an active wine_club to a dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostClubObject'
    V1ClubPatchRequestBody:
      description: Request body for patching an wine_club associated with a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchClubObject'
    V1CustNotePostRequestBody:
      description: Request body for posting a note to a dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostCustNoteObject'
    V1ClubModifierPostRequestBody:
      description: Request body for posting a club_modifier to a wine_club associated with a dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostClubModifierObject'
    V1ClubModifierPatchRequestBody:
      description: Request body for patching a club_modifier on a wine_club associated with a dtc_customer resource. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchClubModifierObject'
    V1OverrideInformationPatchRequestBody:
      description: Request body for patching the override_information for a wine_club associated with a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchOverrideInformationObject'
    V1MailListCodePostRequestBody:
      description: Request body for posting a mail_list_code to a dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostMailListCodeObject'
    V1WinePrefCodePostRequestBody:
      description: Request body for posting a wine_preference_code to a wine_club associated with a dtc_customer resource. All components of the object are required to be present. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PostWinePrefCodeObject'
    V1UserDefinedCodePatchRequestBody:
      description: Request body for patching an user_defined_code associated with a dtc_customer resource in the database. Only components to be updated/edited should be passed in the request body. Components with a non-zero minimum length require a value.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1PatchUserDefinedCodeObject'
  responses:
    200SuccessfulV1CustomerQuery:
      description: Ok - The query of the dtc_customers resource was successful.
      content:
        application/json:
          schema:
            title: dtc_customers Query Results
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      query_results:
                        type: object
                        properties:
                          customers_found:
                            type: integer
                            example: 1
                          point_of_sale_customers:
                            type: array
                            items:
                              $ref: '#/components/schemas/V1GETDtcCustomerObject'
    200SuccessfulV1CustomerGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource.
      content:
        application/json:
          schema:
            title: Existing dtc_customer Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      point_of_sale_customer:
                        $ref: '#/components/schemas/V1GETDtcCustomerObject'
    201SuccessfulV1CustomerPost:
      description: Created - The provided customer data was valid and a new dtc_customer resource was created.
      content:
        application/json:
          schema:
            title: Newly Added dtc_customer Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      point_of_sale_customer:
                        $ref: '#/components/schemas/V1GETDtcCustomerObject'
    200SuccessfulV1CustomerPatch:
      description: Ok - The provided data was valid and the dtc_customer was successfully edited
      content:
        application/json:
          schema:
            title: Successfully Modified dtc_customer Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      point_of_sale_customer:
                        $ref: '#/components/schemas/V1GETDtcCustomerObject'
    200SuccessfulV1CustomerDelete:
      description: Ok - The specified customer_id was successfully deleted.
    200SuccessfulV1ActiveClubsGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of active clubs associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of Active dtc_customer Wine Clubs
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      active_clubs:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETWineClubObject'
    201SuccessfulV1ActiveClubPost:
      description: Created - The provided club data was valid and a new active_club has been associated with the dtc_customer resource
      content:
        application/json:
          schema:
            title: Newly Added Active dtc_customer Wine Club
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      active_club:
                        $ref: '#/components/schemas/V1GETWineClubObject'
    200SuccessfulV1ActiveClubPatch:
      description: Ok - The provided club data was valid and the active_club was successfully edited.
      content:
        application/json:
          schema:
            title: Successfully Active dtc_customer Wine Club
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      active_club:
                        $ref: '#/components/schemas/V1GETWineClubObject'
    200SuccessfulV1CreditCardsGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of alternative credit cards associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of dtc_customer Credit Card Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      credit_cards:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETCreditCardObject'
    200SuccessfulV1CreditCardGet:
      description: Ok - The provided credit_card_id corresponds to an existing alternative credit_card resource.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Credit Card Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      credit_card:
                        $ref: '#/components/schemas/V1GETCreditCardObject'
    201SuccessfulV1CreditCardPost:
      description: Created - The provided credit card data was sufficient to create a new credit_card and add it to the array associated with the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Newly Added dtc_customer Credit Card Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      credit_card:
                        $ref: '#/components/schemas/V1GETCreditCardObject'
    200SuccessfulV1CreditCardPatch:
      description: Ok - The provided was sufficient to successfully edit the specified credit_card.
      content:
        application/json:
          schema:
            title: Successfully Modified dtc_customer Credit Card Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      credit_card:
                        $ref: '#/components/schemas/V1GETCreditCardObject'
    200SuccessfulV1CreditCardDelete:
      description: Ok - The specified credit_card was successfully deleted.
    200SuccessfulV1AltShippingAddressesGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of alternative shipping addresses associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of Alternate dtc_customer Shipping Addresses
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      alt_shipping_addresses:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETAltShippingAddressObject'
    200SuccessfulV1AltShippingAddressGet:
      description: Ok - The provided alt_ship_address_id corresponds to an existing alternative ship_address resource.
      content:
        application/json:
          schema:
            title: Requested Alternate dtc_customer Shipping Address
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      alt_shipping_address:
                        $ref: '#/components/schemas/V1GETAltShippingAddressObject'
    201SuccessfulV1AltShipAddressPost:
      description: Created - The provided alternative shipping address data was sufficient to create a new alt_ahipping_address and add it to the array associated with the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Newly Added dtc_customer Alternate Shipping Address Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      alt_shipping_address:
                        $ref: '#/components/schemas/V1GETAltShippingAddressObject'
    200SuccessfulV1AltShipAddressPatch:
      description: Ok - The provided data was sufficient to successfully edit the specified alt_shipping_address.
      content:
        application/json:
          schema:
            title: Successfully Modified dtc_customer Alternate Shipping Address Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      alt_shipping_address:
                        $ref: '#/components/schemas/V1GETAltShippingAddressObject'
    200SuccessfulV1AltShipAddressDelete:
      description: Ok - The specified alt_shipping_address was successfully deleted.
    200SuccessfulV1BillingAddressGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the billing address associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Billing Address Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      billing_address:
                        $ref: '#/components/schemas/V1GETBillingAddressObject'
    201SuccessfulV1BillingAddressPost:
      description: Created - The provided data was valid and the billing_address was successfully added to the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Newly Added dtc_customer Billing Address Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      billing_address:
                        $ref: '#/components/schemas/V1GETBillingAddressObject'
    200SuccessfulV1BillingAddressPatch:
      description: Ok - The provided data was sufficient to successfully edit the billing_address belonging to the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Successfully Modified dtc_customer Billing Address Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      billing_address:
                        $ref: '#/components/schemas/V1GETBillingAddressObject'
    200SuccessfulV1CustContactsGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of customer contacts associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of dtc_customer Contact Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      contacts:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETCustContactObject'
    200SuccessfulV1CustContactGet:
      description: Ok - The provided contact_id corresponds to an existing contact resource.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Contact Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      contact:
                        $ref: '#/components/schemas/V1GETCustContactObject'
    201SuccessfulV1CustContactPost:
      description: Created - The provided contact data was valid and a new contact was added to the contacts collection on the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Newly Added dtc_customer Contact Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      contact:
                        $ref: '#/components/schemas/V1GETCustContactObject'
    200SuccessfulV1CustContactPatch:
      description: Ok - The provided data was sufficient to successfully edit the specified contact.
      content:
        application/json:
          schema:
            title: Successfully Modified dtc_customer Contact Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      contact:
                        $ref: '#/components/schemas/V1GETCustContactObject'
    200SuccessfulV1InactiveClubsGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of inactive clubs associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of Inactive dtc_customer Wine Club Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      inactive_clubs:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETWineClubObject'
    200SuccessfulV1InactiveClubPatch:
      description: Ok - The provided club data was valid and the inactive_club was successfully edited.
      content:
        application/json:
          schema:
            title: Successfully Modified Inactive dtc_customer Wine Club Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      inactive_club:
                        $ref: '#/components/schemas/V1GETWineClubObject'
    200SuccessfulV1MailListCodesGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of mail list codes associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of dtc_customer Mail List Code Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      mail_list_codes:
                        type: array
                        maxItems: 16
                        items:
                          $ref: '#/components/schemas/V1GETMailListCodeObject'
    200SuccessfulV1MailListCodeGet:
      description: Ok - The provided mail_list_code_id corresponds to an existing mail_list_code resource.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Mail List Code Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      mail_list_code:
                        $ref: '#/components/schemas/V1GETMailListCodeObject'
    201SuccessfulV1MailListCodePost:
      description: Created - The provided contact data was valid and a new mail_list_code was added to the mail_list_codes collection on the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Newly Added dtc_customer Mail List Code Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      mail_list_code:
                        $ref: '#/components/schemas/V1GETMailListCodeObject'
    200SuccessfulV1MailListCodeDelete:
      description: Ok - The specified mail_list_code was successfully deleted.
    200SuccessfulV1CustNotesGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of notes associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of dtc_customer Customer Note Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      notes:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETCustNoteObject'
    200SuccessfulV1CustNoteGet:
      description: Ok - The provided note_id corresponds to an existing note resource.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Customer Note Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      note:
                        $ref: '#/components/schemas/V1GETCustNoteObject'
    201SuccessfulV1CustNotePost:
      description: Created - The provided note data was valid and a new note was added to the notes collection on the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Newly Added dtc_customer Customer Note Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      note:
                        $ref: '#/components/schemas/V1GETCustNoteObject'
    200SuccessfulV1CustNoteDelete:
      description: Ok - The specified customer note was successfully deleted.
    200SuccessfulV1CustOrdersGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of orders associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of dtc_customer Customer Order Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      orders:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETCustOrderObject'
    200SuccessfulV1CustOrderGet:
      description: Ok - The provided order_id corresponds to an existing order resource.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Customer Order Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      order:
                        $ref: '#/components/schemas/V1GETCustOrderObject'
    200SuccessfulV1PrimaryShippingAddressGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the primary shipping address associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Primary Shipping Address Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      primary_shipping_address:
                        $ref: '#/components/schemas/V1GETPrimaryShippingAddressObject'
    200SuccessfulV1PrimaryShippingAddressPatch:
      description: Ok - The provided data was sufficient to successfully edit the primary_shipping_address belonging to the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Successfully Updated dtc_customer Primary Shipping Address Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      primary_shipping_address:
                        $ref: '#/components/schemas/V1GETPrimaryShippingAddressObject'
    200SuccessfulV1QuitClubsGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of quit clubs associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of Quit dtc_customer Wine Club Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      quit_clubs:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETWineClubObject'
    200SuccessfulV1SalesStatisticsGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data are the sales statistics associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Sales Statistics
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      sales_statistics:
                        $ref: '#/components/schemas/V1GETSalesStatisticsObject'
    200SuccessfulV1UserDefinedCodesGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of user-defined codes associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of dtc_customer User Defined Code Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      user_defined_codes:
                        type: array
                        minItems: 4
                        maxItems: 4
                        items:
                          $ref: '#/components/schemas/V1GETUserDefinedCodeObject'
    200SuccessfulV1UserDefinedCodeGet:
      description: Ok - The provided user_defined_code_id corresponds to an existing user_defined_code resource.
      content:
        application/json:
          schema:
            title: Requested dtc_customer User Defined Code Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      user_defined_code:
                        $ref: '#/components/schemas/V1GETUserDefinedCodeObject'
    200SuccessfulV1UserDefinedCodePatch:
      description: Ok - The provided data was sufficient to successfully edit the specified user_defined_code.
      content:
        application/json:
          schema:
            title: Successfully Updated dtc_customer User Defined Code Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      user_defined_code:
                        $ref: '#/components/schemas/V1GETUserDefinedCodeObject'
    200SuccessfulV1AdditionalCommentsGet:
      description: Ok - The provided customer_id corresponds to an existing dtc_customer resource. The returned data is the collection of customer contacts associated with requested dtc_customer.
      content:
        application/json:
          schema:
            title: Collection of contact Additional Comment Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      additional_comments:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETAdditionalCommentObject'
    200SuccessfulV1AdditionalCommentGet:
      description: Ok - The provided contact_id corresponds to an existing contact resource.
      content:
        application/json:
          schema:
            title: Requested contact Additional Comment Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      additional_comment:
                        $ref: '#/components/schemas/V1GETAdditionalCommentObject'
    201SuccessfulV1AdditionalCommentPost:
      description: Created - The provided contact data was valid and a new contact was added to the contacts collection on the dtc_customer resource.
      content:
        application/json:
          schema:
            title: Newly Added contact Additional Comment Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      additional_comment:
                        $ref: '#/components/schemas/V1GETAdditionalCommentObject'
    200SuccessfulV1AdditionalCommentDelete:
      description: Ok - The specified additional comment was deleted.
    200SuccessfulV1ClubGet:
      description: Ok - The provided club_id corresponds to an existing club resource.
      content:
        application/json:
          schema:
            title: Requested dtc_customer Wine Club Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      wine_club:
                        $ref: '#/components/schemas/V1GETWineClubObject'
    200SuccessfulV1ClubModifiersGet:
      description: Ok - The provided club_id corresponds to an existing club resource. The returned data is the collection of club modifiers for the specified club.
      content:
        application/json:
          schema:
            title: Collection of wine_club Modifier Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      club_modifiers:
                        type: array
                        items:
                          $ref: '#/components/schemas/V1GETClubModifierObject'
    200SuccessfulV1ClubModifierGet:
      description: Ok - The provided club_modifier_id corresponds to a club_modifier associated with the specified club.
      content:
        application/json:
          schema:
            title: Requested wine_club Modifier Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      club_modifier:
                        $ref: '#/components/schemas/V1GETClubModifierObject'
    201SuccessfulV1ClubModifierPost:
      description: Created - The provided club_modifier data was valid and a new club_modifier was added to the club_modifiers collection on the specified club.
      content:
        application/json:
          schema:
            title: Newly Added wine_club Modifier Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      club_modifier:
                        $ref: '#/components/schemas/V1GETClubModifierObject'
    201SuccessfulV1ClubModifierPatch:
      description: Created - The provided club_modifier data was valid and the existing club_modifier was update with the provided data.
      content:
        application/json:
          schema:
            title: Successfully Modified wine_club Modifier Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      club_modifier:
                        $ref: '#/components/schemas/V1GETClubModifierObject'
    200SuccessfulV1OverrideInformationGet:
      description: Ok - The provided club_id corresponds to an existing club resource. The returned data is the override information for the specified club.
      content:
        application/json:
          schema:
            title: Requested wine_club Override Information Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      override_information:
                        $ref: '#/components/schemas/V1GETOverrideInformationObject'
    200SuccessfulV1OverrideInformationPatch:
      description: Ok - The provided data was sufficient to successfully edit the specified club override_information.
      content:
        application/json:
          schema:
            title: Successfully Modified wine_club Override Information Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      override_information:
                        $ref: '#/components/schemas/V1GETOverrideInformationObject'
    200SuccessfulV1WinePrefCodesGet:
      description: Ok - The provided club_id corresponds to an existing club resource. The returned data is the collection of wine preference codes for the specified club.
      content:
        application/json:
          schema:
            title: Collection of wine_club Wine Preference Code Objects
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      wine_preference_codes:
                        type: array
                        minItems: 1
                        maxItems: 20
                        items:
                          $ref: '#/components/schemas/V1GETWinePrefCodeObject'
    200SuccessfulV1WinePrefCodeGet:
      description: Ok - The provided wine_pref_code_id corresponds to a wine_preference_code associated with the specified club.
      content:
        application/json:
          schema:
            title: Requested wine_club Wine Preference Code Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      wine_preference_code:
                        $ref: '#/components/schemas/V1GETWinePrefCodeObject'
    201SuccessfulV1WinePrefCodePost:
      description: Created - The provided wine_preference_code data was valid and a new wine_preference_code was added to the wine_preference_codes collection belonging to the specified club.
      content:
        application/json:
          schema:
            title: Newly Added wine_club Wine Preference Code Object
            type: object
            properties:
              ams_api_response:
                type: object
                properties:
                  error_state:
                    type: boolean
                    example: false
                  endpoint_response:
                    type: object
                    properties:
                      wine_preference_code:
                        $ref: '#/components/schemas/V1GETWinePrefCodeObject'
    200SuccessfulV1WinePrefCodeDelete:
      description: Ok - The specified wine_preference_code was successfully deleted.
    400BadParmsGet:
      description: The query parameters used in the query of the dtc_customers endpoint were invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/400BadParmsGetResponse'
    400BadPostResponse:
      description: The JSON body used in the POST request is invalid or one of the property values failed validation. Information will be provided indicating how to correct the issue.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/400BadPostResponse'
    400BadPatchResponse:
      description: The JSON body used in the PATCH request is invalid or one the property values failed validation. Information will be provided indicating how to correct the issue.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/400BadPatchResponse'
    401UnauthorizedResponse:
      description: The authorization GUID used in the request was invalid/expired or the authorization header itself was missing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/401UnauthorizedResponse'
    403ForbiddenResponse:
      description: The API User does not have access to the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/403ForbiddenResponse'
    404NotFoundResponse:
      description: The requested API resource does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404NotFoundResponse'
  schemas:
    V1PostCustomerObject:
      title: JSON for POST of dtc_customer Object
      type: object
      required:
        - allocation_code
        - birth_date
        - cell_phone
        - club_shipping_code
        - first_name
        - full_name
        - greeting
        - home_phone
        - last_name
        - market_code
        - middle_initial
        - ok_to_email_flag
        - ok_to_mail_flag
        - ok_to_phone_flag
        - preferred_payment_code
        - primary_email
        - region_code
        - salutation
        - secondary_email
        - shipping_code
        - source_code
        - work_phone
        - billing_address
        - primary_shipping_address
      properties:
        allocation_code:
          type: string
          maxLength: 4
          example: NA
        birth_date:
          type: string
          maxLength: 10
          example: 01/01/1980
        cell_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
        club_shipping_code:
          type: string
          maxLength: 4
          example: FX01
        first_name:
          type: string
          maxLength: 24
          example: Joe
        full_name:
          type: string
          maxLength: 30
          example: Joe Schmo
        greeting:
          type: string
          maxLength: 25
          example: Hi there Joe Bob!
        home_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
        last_name:
          type: string
          maxLength: 30
          example: Schmo
        market_code:
          type: string
          maxLength: 4
          example: NA
        middle_initial:
          type: string
          maxLength: 1
          example: B
        ok_to_email_flag:
          type: boolean
          example: true
        ok_to_mail_flag:
          type: boolean
          example: true
        ok_to_phone_flag:
          type: boolean
          example: false
        preferred_payment_code:
          type: string
          maxLength: 2
        primary_email:
          type: string
          minLength: 7
          maxLength: 60
          format: email
          example: this@gmail.com
        region_code:
          type: string
          maxLength: 4
          example: NA
        salutation:
          type: string
          maxLength: 12
          example: Professor
        secondary_email:
          type: string
          maxLength: 60
          format: email
          example: thisotherone@gmail.com
        shipping_code:
          type: string
          maxLength: 4
          example: FX01
        source_code:
          type: string
          maxLength: 6
          example: KEITH
        work_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
        billing_address:
          $ref: '#/components/schemas/V1PostBillingAddressObject'
        primary_shipping_address:
          $ref: '#/components/schemas/V1PostPrimaryShippingAddressObject'
    V1PostBillingAddressObject:
      title: JSON for POST of billing_address Object
      type: object
      required:
        - city
        - comment_1
        - comment_2
        - company_name
        - country
        - state
        - street_address
        - suite_apartment
        - zip_code
      properties:
        city:
          type: string
          maxLength: 24
          example: Santa Rosa
        comment_1:
          type: string
          maxLength: 60
          example: This is the address where the mail goes.
        comment_2:
          type: string
          maxLength: 60
          example: Is distinct from any shipping addresses.
        company_name:
          type: string
          maxLength: 30
          example: ' '
        country:
          type: string
          maxLength: 3
          example: USA
        state:
          type: string
          maxLength: 2
          example: CA
        street_address:
          type: string
          maxLength: 30
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          maxLength: 10
          example: '95409'
    V1PostPrimaryShippingAddressObject:
      title: JSON for POST of primary_shipping_address Object
      type: object
      required:
        - city
        - company_name
        - country
        - delivery_instructions
        - residence_flag
        - state
        - street_address
        - suite_apartment
        - zip_code
      properties:
        city:
          type: string
          maxLength: 24
          example: Santa Rosa
        company_name:
          type: string
          maxLength: 30
          example: Advanced Management Systems
        country:
          type: string
          maxLength: 3
          example: USA
        delivery_instructions:
          type: string
          maxLength: 40
          example: Make sure to leave it on the stoop.
        residence_flag:
          type: boolean
          example: true
        state:
          type: string
          maxLength: 2
          example: CA
        street_address:
          type: string
          maxLength: 30
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          maxLength: 10
          example: '95409'
    V1PostCreditCardObject:
      title: JSON for POST of credit_card Object
      type: object
      required:
        - card_description
        - credit_card_expiration_date
        - credit_card_token
        - credit_card_token_date
        - primary_club_pref_flag
        - internet_default_flag
        - name_on_card
        - street_address
        - credit_card_token_type
        - zip_code
      properties:
        card_description:
          type: string
          maxLength: 20
          minLength: 1
          example: Joe's card
        credit_card_expiration_date:
          type: string
          maxLength: 5
          minLength: 5
          example: 10/22
        credit_card_token:
          type: string
          maxLength: 20
          minLength: 16
          example: 1234XXXXXXXXXXXXXXXX
        credit_card_token_date:
          type: string
          maxLength: 5
          minLength: 5
          example: 11/18
        primary_club_pref_flag:
          type: boolean
          example: false
        internet_default_flag:
          type: boolean
          example: false
        name_on_card:
          type: string
          maxLength: 30
          minLength: 2
          example: Joe Schmo
        street_address:
          type: string
          maxLength: 30
          minLength: 2
          example: 1234 Some St.
        credit_card_token_type:
          $ref: '#/components/schemas/CreditCardTokenTypeEnum'
        zip_code:
          type: string
          maxLength: 10
          minLength: 5
          example: '12345'
    V1PostAltShipAddressObject:
      title: JSON for POST of alt_shipping_address Object
      type: object
      required:
        - address_name
        - birth_date
        - city
        - company_name
        - country
        - delivery_instructions
        - first_name
        - gift_address_flag
        - last_name
        - phone_number
        - primary_email
        - residence_flag
        - secondary_email
        - state
        - street_address
        - suite_apartment
        - zip_code
      properties:
        address_name:
          type: string
          maxLength: 20
          minLength: 2
          example: Joe's Home
        birth_date:
          type: string
          maxLength: 10
          example: 10/23/1981
        city:
          type: string
          maxLength: 24
          minLength: 2
          example: Santa Rosa
        company_name:
          type: string
          maxLength: 30
          example: Joe's Plumbing
        country:
          type: string
          maxLength: 3
          minLength: 2
          example: USA
        delivery_instructions:
          type: string
          maxLength: 40
          example: 'Jump in the air, spin around, and dance.'
        first_name:
          type: string
          maxLength: 20
          minLength: 2
          example: Joe
        gift_address_flag:
          type: boolean
          example: false
        last_name:
          type: string
          maxLength: 20
          minLength: 2
          example: Schmo
        phone_number:
          type: string
          maxLength: 15
          example: 555-555-5555
        primary_email:
          type: string
          maxLength: 60
          example: this@gmail.com
        residence_flag:
          type: boolean
          example: true
        secondary_email:
          type: string
          maxLength: 60
          example: thisotherone@gmail.com
        state:
          type: string
          maxLength: 2
          minLength: 2
          example: CA
        street_address:
          type: string
          maxLength: 30
          minLength: 2
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          maxLength: 10
          minLength: 5
          example: '95409'
    V1PostCustContactObject:
      title: JSON for POST of contact Object
      type: object
      required:
        - comment
        - complete_code
        - complete_date
        - contact_code
        - contact_date
        - contact_method
        - contact_time
        - contact_type
        - followup_code
        - followup_date
        - promotion_code
        - additional_comments
      properties:
        comment:
          type: string
          minLength: 1
          maxLength: 40
          example: We got in touch with Joe.
        complete_code:
          type: string
          maxLength: 6
          example: DONE
        complete_date:
          type: string
          maxLength: 10
          example: 12/10/2018
        contact_code:
          type: string
          minLength: 1
          maxLength: 6
          example: BIRTH
        contact_date:
          type: string
          minLength: 10
          maxLength: 10
          example: 11/11/2018
        contact_method:
          $ref: '#/components/schemas/ContactMethodEnum'
        contact_time:
          type: string
          minLength: 8
          maxLength: 8
          example: '12:00:00'
        contact_type:
          $ref: '#/components/schemas/ContactTypeEnum'
        followup_code:
          type: string
          maxLength: 6
          example: RMNDR
        followup_date:
          type: string
          maxLength: 10
          example: 12/09/2018
        promotion_code:
          type: string
          maxLength: 6
          example: BD20
        additional_comments:
          $ref: '#/components/schemas/V1PostAdditionalCommentArray'
    V1PostAdditionalCommentArray:
      type: array
      minItems: 1
      items:
        type: object
        properties:
          comment:
            $ref: '#/components/schemas/V1PostAdditionalCommentObject'
    V1PostAdditionalCommentObject:
      title: JSON for POST of additional_comment Object
      type: object
      properties:
        comment:
          type: string
          maxLength: 1000
          minLength: 1
          example: Here be some additional comments related to the contact.
    V1PostCustNoteObject:
      title: JSON for POST of note Object
      type: object
      required:
        - note_text
      properties:
        note_text:
          type: string
          maxLength: 1000
          minLength: 1
          example: Here be some notes about Joe's account.
    V1PostClubObject:
      title: JSON for POST of wine_club Object
      type: object
      required:
        - begin_date
        - end_date
        - gift_customer_id
        - source_code
        - termination_code
        - user_defined_code
        - wine_club_code
        - override_information
        - wine_preference_codes
      properties:
        begin_date:
          type: string
          maxLength: 10
          minLength: 10
          example: 01/01/2018
        end_date:
          type: string
          maxLength: 10
          example: 01/01/2020
        gift_customer_id:
          type: integer
          minimum: 0
          maximum: 999999
          example: 0
        source_code:
          type: string
          maxLength: 6
          example: KEITH
        termination_code:
          type: string
          maxLength: 4
          example: ' '
        user_defined_code:
          type: string
          maxLength: 4
          example: UD2
        wine_club_code:
          type: string
          maxLength: 2
          minLength: 1
          example: XY
        override_information:
          type: object
          required:
            - credit_card_expiration_date
            - credit_card_token
            - credit_card_token_date
            - credit_card_token_type
            - prepaid_tender_type_code
            - primary_email
            - secondary_email
            - shipping_code
          properties:
            credit_card_expiration_date:
              type: string
              maxLength: 5
              example: 10/23
            credit_card_token:
              type: string
              maxLength: 16
              example: 1234XXXXXXXXXXXX
            credit_card_token_date:
              type: string
              maxLength: 5
              example: 10/18
            credit_card_token_type:
              $ref: '#/components/schemas/CreditCardTokenTypeEnum'
            prepaid_tender_type_code:
              type: string
              maxLength: 2
              example: AM
            primary_email:
              type: string
              maxLength: 60
              example: thiscluboverrideemail@gmail.com
            secondary_email:
              type: string
              maxLength: 60
              example: thiscluboverrideemail2@gmail.com
            shipping_code:
              type: string
              maxLength: 4
              example: FX01
        wine_preference_codes:
          type: array
          items:
            type: object
            required:
              - wine_preference_code
            properties:
              wine_preference_code:
                type: string
                maxLength: 4
                minLength: 1
                example: RO
    V1PostClubModifierObject:
      title: JSON for POST of club_modifier Object
      type: object
      required:
        - begin_date
        - end_date
        - hold_until_date
        - modifier_type
        - recurring_flag
        - status_code
        - temp_ship_address_id
      properties:
        begin_date:
          type: string
          maxLength: 10
          minLength: 10
          example: 06/01/2018
        end_date:
          type: string
          maxLength: 10
          minLength: 10
          example: 09/01/2018
        hold_until_date:
          type: string
          maxLength: 10
          example: ' '
        modifier_type:
          $ref: '#/components/schemas/ClubModifierTypeEnum'
        recurring_flag:
          type: boolean
          example: false
        status_code:
          type: string
          maxLength: 2
          example: VC
        temp_ship_address_id:
          type: integer
          minimum: 0
          maximum: 999999999999
          example: 0
    V1PostMailListCodeObject:
      title: JSON for POST of mail_list_code Object
      type: object
      required:
        - mail_list_code
      properties:
        mail_list_code:
          type: string
          maxLength: 2
          minLength: 1
          example: BN
    V1PostWinePrefCodeObject:
      title: JSON for POST of wine_preference_code Object
      type: object
      required:
        - wine_preference_code
      properties:
        wine_preference_code:
          type: string
          maxLength: 4
          minLength: 1
          example: RW
    V1PatchCustomerObject:
      title: JSON for PATCH of dtc_customer Object
      type: object
      properties:
        allocation_code:
          type: string
          maxLength: 4
          example: NA
        birth_date:
          type: string
          maxLength: 10
          example: 01/01/1980
        cell_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
        club_shipping_code:
          type: string
          maxLength: 4
          minLength: 2
          example: FX01
        customer_type_code:
          type: string
          maxLength: 4
          minLength: 2
          example: RETL
        first_name:
          type: string
          maxLength: 24
          example: Joe
        full_name:
          type: string
          maxLength: 30
          example: Joe Schmo
        greeting:
          type: string
          maxLength: 25
          example: Hi there Joe Bob!
        home_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
        last_name:
          type: string
          maxLength: 30
          example: Schmo
        market_code:
          type: string
          maxLength: 4
          minLength: 2
          example: NA
        middle_initial:
          type: string
          maxLength: 1
          example: B
        ok_to_email_flag:
          type: boolean
          example: true
        ok_to_mail_flag:
          type: boolean
          example: true
        ok_to_phone_flag:
          type: boolean
          example: false
        price_type_code:
          type: string
          maxLength: 1
          minLength: 1
          example: R
        primary_email:
          type: string
          maxLength: 60
          minLength: 7
          format: email
          example: this@gmail.com
        region_code:
          type: string
          maxLength: 4
          example: NA
        salutation:
          type: string
          maxLength: 12
          example: Professor
        secondary_email:
          type: string
          maxLength: 60
          format: email
          example: thisotherone@gmail.com
        shipping_code:
          type: string
          maxLength: 4
          minLength: 2
          example: FX01
        source_code:
          type: string
          maxLength: 6
          example: KEITH
        work_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
    V1PatchCreditCardObject:
      title: JSON for PATCH of credit_card Object
      type: object
      properties:
        card_description:
          type: string
          maxLength: 20
          minLength: 1
          example: Joe's card
        credit_card_expiration_date:
          type: string
          maxLength: 5
          minLength: 5
          example: 10/22
        credit_card_token:
          type: string
          maxLength: 20
          minLength: 16
          example: 1234XXXXXXXXXXXXXXXX
        credit_card_token_date:
          type: string
          maxLength: 5
          minLength: 5
          example: 11/18
        primary_club_pref_flag:
          type: boolean
          example: false
        internet_default_flag:
          type: boolean
          example: false
        name_on_card:
          type: string
          maxLength: 30
          minLength: 1
          example: Joe Schmo
        street_address:
          type: string
          maxLength: 30
          minLength: 1
          example: 1234 Some St.
        credit_card_token_type:
          $ref: '#/components/schemas/CreditCardTokenTypeEnum'
        zip_code:
          type: string
          maxLength: 10
          minLength: 5
          example: '12345'
    V1PatchAltShipAddressObject:
      title: JSON for PATCH of alt_shipping_address Object
      type: object
      properties:
        address_name:
          type: string
          maxLength: 20
          minLength: 1
          example: Joe's Home
        birth_date:
          type: string
          minLength: 10
          maxLength: 10
          example: 10/23/1981
        city:
          type: string
          maxLength: 24
          minLength: 1
          example: Santa Rosa
        company_name:
          type: string
          maxLength: 30
          example: Joe's Plumbing
        country:
          type: string
          maxLength: 3
          minLength: 2
          example: USA
        delivery_instructions:
          type: string
          maxLength: 40
          example: 'Jump in the air, spin around, and dance.'
        first_name:
          type: string
          maxLength: 20
          minLength: 1
          example: Joe
        gift_address_flag:
          type: boolean
          example: false
        last_name:
          type: string
          maxLength: 20
          minLength: 1
          example: Schmo
        phone_number:
          type: string
          maxLength: 15
          example: 555-555-5555
        primary_email:
          type: string
          maxLength: 60
          example: this@gmail.com
        residence_flag:
          type: boolean
          example: true
        secondary_email:
          type: string
          maxLength: 60
          example: thisotherone@gmail.com
        state:
          type: string
          maxLength: 2
          minLength: 2
          example: CA
        street_address:
          type: string
          maxLength: 30
          minLength: 1
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          maxLength: 10
          minLength: 5
          example: '95409'
    V1PatchBillingAddressObject:
      title: JSON for PATCH of billing_address Object
      type: object
      nullable: true
      properties:
        city:
          type: string
          maxLength: 24
          example: Santa Rosa
        comment_1:
          type: string
          maxLength: 60
          example: This is the address where the mail goes.
        comment_2:
          type: string
          maxLength: 60
          example: Is distinct from any shipping addresses.
        company_name:
          type: string
          maxLength: 30
          example: ' '
        country:
          type: string
          maxLength: 3
          example: USA
        state:
          type: string
          maxLength: 2
          example: CA
        street_address:
          type: string
          maxLength: 30
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          maxLength: 10
          example: '95409'
    V1PatchCustContactObject:
      title: JSON for PATCH of contact Object
      type: object
      properties:
        comment:
          type: string
          minLength: 1
          maxLength: 40
          example: We got in touch with Joe.
        complete_code:
          type: string
          maxLength: 6
          example: DONE
        complete_date:
          type: string
          minLength: 10
          maxLength: 10
          example: 11/11/2018
        contact_code:
          type: string
          minLength: 1
          maxLength: 6
          example: BIRTH
        followup_code:
          type: string
          maxLength: 6
          example: RMNDR
        followup_date:
          type: string
          maxLength: 10
          example: 12/09/2018
        promotion_code:
          type: string
          maxLength: 6
          example: BD20
    V1PatchClubObject:
      title: JSON for PATCH of wine_club Object
      type: object
      properties:
        end_date:
          type: string
          maxLength: 10
          minLength: 10
          example: 10/23/1981
        source_code:
          type: string
          maxLength: 6
          example: KEITH
        termination_code:
          type: string
          minLength: 1
          maxLength: 4
          example: ' '
        user_defined_code:
          type: string
          maxLength: 4
          example: UD2
    V1PatchClubModifierObject:
      title: JSON for PATCH of club_modifier Object
      type: object
      properties:
        end_date:
          type: string
          maxLength: 10
          minLength: 10
          example: 12/31/2020
        status_code:
          type: string
          maxLength: 2
          minLength: 1
          example: CA
    V1PatchOverrideInformationObject:
      title: JSON for PATCH of override_information Object
      type: object
      properties:
        credit_card_expiration_date:
          type: string
          maxLength: 5
          example: 10/23
        credit_card_token:
          type: string
          maxLength: 16
          example: 1234XXXXXXXXXXXX
        credit_card_token_date:
          type: string
          maxLength: 5
          example: 10/18
        credit_card_token_type:
          $ref: '#/components/schemas/CreditCardTokenTypeEnum'
        prepaid_tender_type_code:
          type: string
          maxLength: 2
          example: AM
        primary_email:
          type: string
          maxLength: 60
          example: thiscluboverrideemail@gmail.com
        secondary_email:
          type: string
          maxLength: 60
          example: thiscluboverrideemail2@gmail.com
        shipping_code:
          type: string
          maxLength: 4
          example: FX01
    V1PatchPrimaryShipAddressObject:
      title: JSON for PATCH of primary_shipping_address Object
      type: object
      properties:
        city:
          type: string
          minLength: 1
          maxLength: 24
          example: Santa Rosa
        company_name:
          type: string
          maxLength: 30
          example: Advanced Management Systems
        country:
          type: string
          minLength: 2
          maxLength: 3
          example: USA
        delivery_instructions:
          type: string
          maxLength: 40
          example: Make sure to leave it on the stoop.
        residence_flag:
          type: boolean
          example: true
        state:
          type: string
          minLength: 2
          maxLength: 2
          example: CA
        street_address:
          type: string
          minLength: 1
          maxLength: 30
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          minLength: 5
          maxLength: 10
          example: '95409'
    V1PatchUserDefinedCodeObject:
      title: JSON for PATCH of user_defined_code Object
      type: object
      nullable: true
      properties:
        active_flag:
          type: boolean
          example: true
        begin_date:
          type: string
          maxLength: 10
          example: 01/01/2018
        end_date:
          type: string
          maxLength: 10
          example: ' '
        user_defined_code:
          type: string
          maxLength: 4
          example: UD1
    400BadParmsGetResponse:
      title: Bad Request - Invalid Query Parameters Response
      x-tags:
        - FailureResponse
      type: object
      properties:
        ams_api_response:
          type: object
          properties:
            error_state:
              type: boolean
              example: true
            error_msg:
              $ref: '#/components/schemas/HandlerHttpErrorMessage'
            endpoint_response:
              type: object
              properties:
                potential_query_parameters:
                  $ref: '#/components/schemas/PotentialQueryParms'
    400BadPatchResponse:
      title: Bad Request - Invalid Patch Response
      x-tags:
        - FailureResponse
      type: object
      properties:
        ams_api_response:
          type: object
          properties:
            error_state:
              type: boolean
              example: true
            error_msg:
              $ref: '#/components/schemas/HandlerHttpErrorMessage'
            endpoint_response:
              oneOf:
                - $ref: '#/components/schemas/PropertyDataErrorResponse'
                - $ref: '#/components/schemas/JsonValidationErrorResponse'
    400BadPostResponse:
      title: Bad Request - Invalid Post Response
      x-tags:
        - FailureResponse
      type: object
      properties:
        ams_api_response:
          type: object
          properties:
            error_state:
              type: boolean
              example: true
            error_msg:
              $ref: '#/components/schemas/HandlerHttpErrorMessage'
            endpoint_response:
              oneOf:
                - $ref: '#/components/schemas/PropertyDataErrorResponse'
                - $ref: '#/components/schemas/JsonValidationErrorResponse'
    401UnauthorizedResponse:
      title: Unauthorized - Invalid/Missing Authorization GUID Response
      x-tags:
        - FailureResponse
      type: object
      properties:
        ams_api_response:
          type: object
          properties:
            error_state:
              type: boolean
              example: true
            error_msg:
              type: string
              example: Invalid authorization GUID.
    403ForbiddenResponse:
      title: Forbidden - Access Not Permitted Response
      x-tags:
        - FailureResponse
      type: object
      properties:
        ams_api_response:
          type: object
          required:
            - error_state
            - error_msg
          properties:
            error_state:
              type: boolean
              example: true
            error_msg:
              oneOf:
                - $ref: '#/components/schemas/HandlerHttpErrorMessage'
                - $ref: '#/components/schemas/InvalidImpersonationGuidMessage'
            endpoint_response:
              type: object
              properties:
                error_msg:
                  oneOf:
                    - $ref: '#/components/schemas/NoApiAccessMessage'
                    - $ref: '#/components/schemas/AmsUserImpersonationFailureMessage'
                    - $ref: '#/components/schemas/DtcCustImpersonationFailureMessage'
    404NotFoundResponse:
      title: Not Found - Resource Does Not Exist Response
      x-tags:
        - FailureResponse
      type: object
      properties:
        ams_api_response:
          type: object
          properties:
            error_state:
              type: boolean
              example: true
            error_msg:
              $ref: '#/components/schemas/HandlerHttpErrorMessage'
            endpoint_response:
              type: object
              properties:
                error_msg:
                  $ref: '#/components/schemas/ResourceNotFoundMessage'
    AmsUserImpersonationFailureMessage:
      title: AmsUserImpersonationFailureMessage
      x-tags:
        - Message
      type: string
      example: User does not have access to the GET method on the dtc_orders API resource
    CreditCardTokenTypeEnum:
      title: CreditCardTokenTypeEnum
      x-tags:
        - Enumeration
      type: string
      enum:
        - MC
        - VI
        - AE
        - DI
        - DC
        - YC
        - XX
      maxLength: 2
      example: MC
    DtcCustImpersonationFailureMessage:
      title: DtcCustImpersonationFailureMessage
      x-tags:
        - Message
      type: string
      example: 'When impersonating a DTC customer, only actions on that customer are allowed'
    ExampleObject:
      title: ExampleObject
      type: object
      properties:
        object_property_1:
          type: string
          example: Required string property; Maximum Length = 30; Object description.
        object_property_2:
          type: string
          example: Required boolean property; Maximum Length = 0; Flag indicating something about the object.
        object_property_3:
          type: string
          example: Required string property; Minimum Length = 7; Maximum Length = 60; Primary email (XX@X.XX at minimum).
    HandlerHttpErrorMessage:
      title: HandlerHttpErrorMessage
      x-tags:
        - Message
      type: string
      example: The API handler indicated an error condition via the HTTP return code.
    InvalidImpersonationGuidMessage:
      title: InvalidImpersonationGuidMessage
      x-tags:
        - Message
      type: string
      example: Invalid Impersonation Guid
    JsonValidationErrorResponse:
      title: JsonValidationErrorResponse
      type: object
      properties:
        error_message:
          type: string
          example: 'There is at least one error with the given JSON data, see other returned data for an example object with additional information'
        json_validation_errors:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              json_validation_error:
                type: string
                example: I have a problem with the structure of the passed in JSON.
        example_object:
          $ref: '#/components/schemas/ExampleObject'
    NoApiAccessMessage:
      title: NoApiAccessMessage
      x-tags:
        - Message
      type: string
      example: User does not have access to the called method on the called resource.
    OrderStatusEnum:
      title: OrderStatusEnum
      x-tags:
        - Enumeration
      type: string
      maxLength: 30
      enum:
        - '*PRACTICE*'
        - Void
        - Suspended
        - No Sale
        - Shipped/Posted
        - Shipped
        - Incomplete Custom
        - Incomplete
        - Ship on hold
        - Ship Incomplete
        - Appvl needed
        - Tender needed
        - W/C pending
        - Partial Ship
        - Un-shipped
        - Unknown
        - Pend (Pac)
        - Pend (Inv)
        - Pend (Ext)
        - 'Pend (Pac,Inv)'
        - 'Pend (Pac,Ext)'
        - 'Pend (Inv,Ext)'
        - 'Pend (Pac,Inv,Ext)'
      example: Shipped
    PotentialQueryParms:
      title: PotentialQueryParms
      type: array
      minItems: 1
      items:
        anyOf:
          - $ref: '#/components/schemas/QueryParm1Object'
          - $ref: '#/components/schemas/QueryParm2Object'
          - $ref: '#/components/schemas/QueryParm3Object'
          - $ref: '#/components/schemas/QueryParm4Object'
    PropertyDataErrorResponse:
      title: PropertyDataErrorResponse
      type: object
      properties:
        error_message:
          type: string
          example: There were validation errors with the JSON data passed in. See below array for error messages.
        property_data_errors:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              property_data_error:
                type: string
                example: I have a problem with one of the property values that was passed in.
    QueryParm1Object:
      title: QueryParm1Object
      type: object
      properties:
        parameter_name:
          type: string
          example: FIXED_STRING_PARM
        parameter_type:
          type: string
          example: 'Standard parameter (fixed values, see further messaging in the parameter_notes)'
        parameter_notes:
          type: string
          example: This fixed string parm represents a parameter that must have one of a discrete number of possible values. This message will contain information about the possible values.
    QueryParm2Object:
      title: QueryParm2Object
      type: object
      properties:
        parameter_name:
          type: string
          example: STRING_SEARCH_PARM
        parameter_type:
          type: string
          example: String search parameter (generally contains type text search)
        parameter_notes:
          type: string
          example: 'This string_search_parm represents a parameter the will use some form of text matching to limit results. Generally, the text search methodology will be of the contains type, however, the returned notes will specify the type of search methodology.'
    QueryParm3Object:
      title: QueryParm3Object
      type: object
      properties:
        parameter_name:
          type: string
          example: NUMERIC_PARM
        parameter_type:
          type: string
          example: Numeric parameter
        parameter_notes:
          type: string
          example: This numeric_parm represents a parameter that will be compared to some numeric property of an API resource. There are three formats form numeric values and each indicates a different type of numeric comparison. >999 represents a greater than search. <999 represents a less than search. 999-1000 represents an inclusive range search.
    QueryParm4Object:
      title: QueryParm4Object
      type: object
      properties:
        parameter_name:
          type: string
          example: DATE_PARM
        parameter_type:
          type: string
          example: Date parameter
        parameter_notes:
          type: string
          example: This date_parm represents a parameter that will be compared to some date property of an API resource. There are three formats form date values and each indicates a different type of date comparison. >MMDDYY represents a greater than date search. <MMDDYY represents a less than date search. MMDDYY-MMDDYY represents an inclusive date range search.
    ResourceNotFoundMessage:
      title: ResourceNotFoundMessage
      x-tags:
        - Message
      type: string
      example: API resource with provided ID not found.
    ClubModifierTypeEnum:
      title: ClubModifierTypeEnum
      x-tags:
        - Enumeration
        - DtcCustomer
      type: string
      enum:
        - Inactive Window
        - Shipping Override
      maxLength: 30
      example: Inactive Window
    ContactMethodEnum:
      title: ContactMethodEnum
      x-tags:
        - Enumeration
        - DtcCustomer
      type: string
      enum:
        - Email
        - Phone
        - Fax
        - Walk-in
        - Mail
        - Internet
        - Preferred
        - Other
      maxLength: 15
      example: Email
    ContactSourceEnum:
      title: ContactSourceEnum
      x-tags:
        - Enumeration
        - DtcCustomer
      type: string
      maxLength: 25
      enum:
        - Manually Entered
        - Generated by System
        - Imported
        - Generated by Email Engine
        - Generated by API
      example: Manually Entered
    ContactTypeEnum:
      title: ContactTypeEnum
      x-tags:
        - Enumeration
        - DtcCustomer
      type: string
      enum:
        - In
        - Out
      maxLength: 15
      example: Out
    CustomerSetupSourceEnum:
      title: CustomerSetupSourceEnum
      x-tags:
        - Enumeration
        - DtcCustomer
      type: string
      maxLength: 30
      enum:
        - Manual
        - Email
        - Loaded
        - Internet
        - Import
        - API
      example: API
    CustomerStatusEnum:
      title: CustomerStatusEnum
      x-tags:
        - Enumeration
        - DtcCustomer
      type: string
      maxLength: 30
      enum:
        - Active
        - Inactive
      example: Active
    GenericCustFlagEnum:
      title: GenericCustFlagEnum
      x-tags:
        - Enumeration
        - DtcCustomer
      type: string
      maxLength: 7
      enum:
        - Include
        - Only
    V1GETAdditionalCommentObject:
      title: V1GETAdditionalCommentObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        comment_id:
          type: integer
          minimum: 1
          maximum: 999999999
          example: 1
        comment:
          type: string
          maxLength: 1024
          example: Here be some additional comments related to the contact.
    V1GETAltShippingAddressObject:
      title: V1GETAltShippingAddressObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        address_name:
          type: string
          maxLength: 20
          example: Joe's Home
        alt_ship_address_id:
          type: integer
          minimum: 1
          maximum: 999999999999
          example: 456
        birth_date:
          type: string
          maxLength: 10
          example: 10/23/1981
        city:
          type: string
          maxLength: 24
          example: Santa Rosa
        company_name:
          type: string
          maxLength: 30
          example: Joe's Plumbing
        country:
          type: string
          maxLength: 3
          example: USA
        delivery_instructions:
          type: string
          maxLength: 40
          example: 'Jump in the air, spin around, and dance.'
        first_name:
          type: string
          maxLength: 20
          example: Joe
        gift_address_flag:
          type: boolean
          example: false
        last_name:
          type: string
          maxLength: 20
          example: Schmo
        phone_number:
          type: string
          maxLength: 15
          example: 555-555-5555
        primary_email:
          type: string
          maxLength: 60
          example: this@gmail.com
        residence_flag:
          type: boolean
          example: true
        revision_date:
          type: string
          maxLength: 10
          example: 01/01/1800
        sales_tax_code:
          type: string
          maxLength: 2
          example: CA
        secondary_email:
          type: string
          maxLength: 60
          example: thisotherone@gmail.com
        setup_date:
          type: string
          maxLength: 10
          example: 10/10/1800
        shipping_code:
          type: string
          maxLength: 4
          example: FX01
        state:
          type: string
          maxLength: 2
          example: CA
        street_address:
          type: string
          maxLength: 30
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          maxLength: 10
          example: '95409'
    V1GETBillingAddressObject:
      title: V1GETBillingAddressObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      nullable: true
      properties:
        city:
          type: string
          maxLength: 24
          example: Santa Rosa
        comment_1:
          type: string
          maxLength: 60
          example: This is the address where the mail goes.
        comment_2:
          type: string
          maxLength: 60
          example: Is distinct from any shipping addresses.
        company_name:
          type: string
          maxLength: 30
          example: ' '
        country:
          type: string
          maxLength: 3
          example: USA
        state:
          type: string
          maxLength: 2
          example: CA
        street_address:
          type: string
          maxLength: 30
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          maxLength: 10
          example: '95409'
    V1GETClubModifierObject:
      title: V1GETClubModifierObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        begin_date:
          type: string
          maxLength: 10
          example: 06/01/2018
        club_modifier_id:
          type: integer
          maxLength: 12
          example: 1
        end_date:
          type: string
          maxLength: 10
          example: 09/01/2018
        hold_until_date:
          type: string
          maxLength: 10
          example: ' '
        modifier_type:
          $ref: '#/components/schemas/ClubModifierTypeEnum'
        recurring_flag:
          type: boolean
          example: false
        status_code:
          type: string
          maxLength: 2
          example: VC
        temp_ship_address_id:
          type: integer
          minimum: 0
          maximum: 999999999999
          example: 0
    V1GETCreditCardObject:
      title: V1GETCreditCardObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        credit_card_id:
          type: integer
          minimum: 1
          maximum: 999999999999
          example: 123
        card_description:
          type: string
          maxLength: 20
          example: Joe's card
        credit_card_expiration_date:
          type: string
          maxLength: 5
          example: 10/22
        credit_card_token:
          type: string
          maxLength: 20
          example: 1234XXXXXXXXXXXXXXXX
        credit_card_token_date:
          type: string
          maxLength: 5
          example: 11/18
        primary_club_pref_flag:
          type: boolean
          example: false
        internet_default_flag:
          type: boolean
          example: false
        masked_card_number:
          type: string
          maxLength: 20
          example: ....1234
        name_on_card:
          type: string
          maxLength: 30
          example: Joe Schmo
        street_address:
          type: string
          maxLength: 30
          example: 1234 Some St.
        credit_card_token_type:
          $ref: '#/components/schemas/CreditCardTokenTypeEnum'
        ttt_tender_type_code:
          type: string
          maxLength: 2
          example: VM
        zip_code:
          type: string
          maxLength: 10
          example: '12345'
    V1GETCustContactObject:
      title: V1GETCustContactObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        additional_comments_flag:
          type: boolean
          example: true
        comment:
          type: string
          maxLength: 40
          example: We got in touch with Joe.
        complete_code:
          type: string
          maxLength: 6
          example: DONE
        complete_date:
          type: string
          maxLength: 10
          example: 12/10/2018
        contact_code:
          type: string
          maxLength: 6
          example: BIRTH
        contact_date:
          type: string
          maxLength: 10
          example: 11/11/2018
        contact_id:
          type: integer
          minimum: 1
          maximum: 999999999
          example: 789
        contact_method:
          $ref: '#/components/schemas/ContactMethodEnum'
        contact_time:
          type: string
          maxLength: 8
          example: '12:00:00'
        contact_type:
          $ref: '#/components/schemas/ContactTypeEnum'
        followup_code:
          type: string
          maxLength: 6
          example: RMNDR
        followup_date:
          type: string
          maxLength: 10
          example: 12/09/2018
        promotion_code:
          type: string
          maxLength: 6
          example: BD20
        referred_to_order:
          type: integer
          minimum: 0
          maximum: 999999999
          example: 0
        source:
          $ref: '#/components/schemas/ContactSourceEnum'
        additional_comments:
          type: array
          items:
            $ref: '#/components/schemas/V1GETAdditionalCommentObject'
    V1GETCustNoteObject:
      title: V1GETCustNoteObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        note_id:
          type: integer
          minimum: 1
          example: 1
        note_text:
          type: string
          maxLength: 1000
          example: Here be some notes about Joe's account.
    V1GETCustOrderObject:
      title: V1GETCustOrderObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        batch_date:
          type: string
          maxLength: 10
          example: 10/17/2018
        discount_amount:
          type: number
          minimum: -9999999.99
          maximum: 9999999.99
          example: 12.5
        net_total_amount:
          type: number
          minimum: -9999999.99
          maximum: 9999999.99
          example: 157.74
        order_id:
          type: integer
          minimum: 1
          maximum: 999999999
          example: 123456
        shipping_amount:
          type: number
          minimum: -9999999.99
          maximum: 9999999.99
          example: 22.5
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        sub_total:
          type: number
          minimum: -9999999.99
          maximum: 9999999.99
          example: 125
        tax_amount:
          type: number
          minimum: -9999999.99
          maximum: 9999999.99
          example: 10.24
    V1GETDtcCustomerObject:
      title: V1GETDtcCustomerObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        allocation_code:
          type: string
          maxLength: 4
          example: NA
        birth_date:
          type: string
          maxLength: 10
          example: 01/01/1980
        cell_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
        club_shipping_code:
          type: string
          maxLength: 4
          example: FX01
        customer_id:
          type: integer
          minimum: 1
          maximum: 999999
          example: 100
        customer_type_code:
          type: string
          maxLength: 4
          example: RETL
        first_name:
          type: string
          maxLength: 19
          example: Joe
        full_name:
          type: string
          maxLength: 30
          example: Joe Schmo
        greeting:
          type: string
          maxLength: 25
          example: Hi there Joe Bob!
        home_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
        last_contact_date:
          type: string
          maxLength: 10
          example: 01/01/1800
        last_name:
          type: string
          maxLength: 20
          example: Schmo
        last_sale_date:
          type: string
          maxLength: 10
          example: 01/01/1800
        market_code:
          type: string
          maxLength: 4
          example: NA
        middle_initial:
          type: string
          maxLength: 1
          example: B
        ok_to_email_flag:
          type: boolean
          example: true
        ok_to_mail_flag:
          type: boolean
          example: true
        ok_to_phone_flag:
          type: boolean
          example: false
        partial_customer_flag:
          type: boolean
          example: false
        preferred_payment_code:
          type: string
          maxLength: 2
          example: VS
        price_type_code:
          type: string
          maxLength: 1
          example: R
        primary_email:
          type: string
          maxLength: 60
          format: email
          example: this@gmail.com
        region_code:
          type: string
          maxLength: 4
          example: NA
        revision_date:
          type: string
          maxLength: 10
          example: 01/01/1800
        revision_time:
          type: string
          maxLength: 8
          example: '14:15:48'
        salutation:
          type: string
          maxLength: 12
          example: Professor
        secondary_email:
          type: string
          maxLength: 60
          format: email
          example: thisotherone@gmail.com
        setup_date:
          type: string
          maxLength: 10
          example: 01/01/1800
        setup_source:
          $ref: '#/components/schemas/CustomerSetupSourceEnum'
        setup_time:
          type: string
          maxLength: 8
          example: '13:14:15'
        shipping_code:
          type: string
          maxLength: 4
          example: FX01
        source_code:
          type: string
          maxLength: 6
          example: KEITH
        status:
          $ref: '#/components/schemas/CustomerStatusEnum'
        work_phone:
          type: string
          maxLength: 15
          example: 1-555-555-5555
        active_clubs:
          type: array
          items:
            $ref: '#/components/schemas/V1GETWineClubObject'
        credit_cards:
          type: array
          items:
            $ref: '#/components/schemas/V1GETCreditCardObject'
        alt_shipping_addresses:
          type: array
          items:
            $ref: '#/components/schemas/V1GETAltShippingAddressObject'
        billing_address:
          $ref: '#/components/schemas/V1GETBillingAddressObject'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/V1GETCustContactObject'
        inactive_clubs:
          type: array
          items:
            $ref: '#/components/schemas/V1GETWineClubObject'
        mail_list_codes:
          type: array
          maxItems: 16
          items:
            $ref: '#/components/schemas/V1GETMailListCodeObject'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/V1GETCustNoteObject'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/V1GETCustOrderObject'
        primary_shipping_address:
          $ref: '#/components/schemas/V1GETPrimaryShippingAddressObject'
        quit_clubs:
          type: array
          items:
            $ref: '#/components/schemas/V1GETWineClubObject'
        sales_statistics:
          $ref: '#/components/schemas/V1GETSalesStatisticsObject'
        user_defined_codes:
          type: array
          minItems: 4
          maxItems: 4
          items:
            $ref: '#/components/schemas/V1GETUserDefinedCodeObject'
    V1GETMailListCodeObject:
      title: V1GETMailListCodeObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        mail_list_code:
          type: string
          maxLength: 2
          example: BN
        mail_list_code_id:
          type: integer
          minimum: 1
          maximum: 16
          example: 1
    V1GETOverrideInformationObject:
      title: V1GETOverrideInformationObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        credit_card_expiration_date:
          type: string
          maxLength: 5
          example: 10/23
        credit_card_token:
          type: string
          maxLength: 16
          example: 1234XXXXXXXXXXXX
        credit_card_token_date:
          type: string
          maxLength: 5
          example: 10/18
        credit_card_token_type:
          $ref: '#/components/schemas/CreditCardTokenTypeEnum'
        prepaid_tender_type_code:
          type: string
          maxLength: 2
          example: AM
        primary_email:
          type: string
          maxLength: 60
          example: thiscluboverrideemail@gmail.com
        secondary_email:
          type: string
          maxLength: 60
          example: thiscluboverrideemail2@gmail.com
        shipping_code:
          type: string
          maxLength: 4
          example: FX01
    V1GETPrimaryShippingAddressObject:
      title: V1GETPrimaryShippingAddressObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        city:
          type: string
          maxLength: 24
          example: Santa Rosa
        company_name:
          type: string
          maxLength: 30
          example: Advanced Management Systems
        country:
          type: string
          maxLength: 3
          example: USA
        delivery_instructions:
          type: string
          maxLength: 40
          example: Make sure to leave it on the stoop.
        residence_flag:
          type: boolean
          example: true
        stx_sales_tax_code:
          type: string
          maxLength: 2
          example: CA
        state:
          type: string
          maxLength: 2
          example: CA
        street_address:
          type: string
          maxLength: 30
          example: 4415 Sonoma Highway
        suite_apartment:
          type: string
          maxLength: 30
          example: Suite F
        zip_code:
          type: string
          maxLength: 10
          example: '95409'
    V1GETSalesBucketObject:
      title: V1GETSalesBucketObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        sales_total:
          type: number
          minimum: 0
          maximum: 9999999.99
          example: 0
        time_frame:
          type: string
          maxLength: 40
          example: N-month sales total
    V1GETSalesStatisticsObject:
      title: V1GETSalesStatisticsObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        lifetime_sales_total:
          type: number
          minimum: -9999999.99
          maximum: 9999999.99
          example: 157.74
        sales_bucket_1:
          $ref: '#/components/schemas/V1GETSalesBucketObject'
        sales_bucket_2:
          $ref: '#/components/schemas/V1GETSalesBucketObject'
        sales_bucket_3:
          $ref: '#/components/schemas/V1GETSalesBucketObject'
    V1GETUserDefinedCodeObject:
      title: V1GETUserDefinedCodeObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      nullable: true
      properties:
        active_flag:
          type: boolean
          example: true
        begin_date:
          type: string
          maxLength: 10
          example: 01/01/2018
        end_date:
          type: string
          maxLength: 10
          example: ' '
        user_defined_code:
          type: string
          maxLength: 4
          example: UD1
        user_defined_code_id:
          type: integer
          minimum: 1
          maximum: 4
          example: 1
    V1GETWineClubObject:
      title: V1GETWineClubObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        begin_date:
          type: string
          maxLength: 10
          example: 01/01/2018
        club_id:
          type: integer
          minimum: 1
          maximum: 999999999999
          example: 123456789
        end_date:
          type: string
          maxLength: 10
          example: ' '
        gift_customer_id:
          type: integer
          minimum: 0
          maximum: 999999
          example: 0
        source_code:
          type: string
          maxLength: 6
          example: KEITH
        termination_code:
          type: string
          maxLength: 4
          example: ' '
        user_defined_code:
          type: string
          maxLength: 4
          example: UD2
        wine_club_code:
          type: string
          maxLength: 2
          example: XY
        club_modifiers:
          type: array
          items:
            $ref: '#/components/schemas/V1GETClubModifierObject'
        override_information:
          $ref: '#/components/schemas/V1GETOverrideInformationObject'
        wine_preference_codes:
          type: array
          minItems: 1
          maxItems: 16
          items:
            $ref: '#/components/schemas/V1GETWinePrefCodeObject'
    V1GETWinePrefCodeObject:
      title: V1GETWinePrefCodeObject
      x-tags:
        - ObjectModel
        - DtcCustomer
      type: object
      properties:
        wine_preference_code:
          type: string
          maxLength: 4
          example: RW
        wine_preference_description:
          type: string
          maxLength: 30
          example: Preference for red wine
        wine_pref_code_id:
          type: integer
          minimum: 1
          maximum: 12
          example: 1
